{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/Block.js","pages/components-overview/material-ui/buttons/TextButtons.js","pages/components-overview/material-ui/buttons/IconButtons.js","pages/components-overview/material-ui/buttons/ButtonGroups.js","pages/components-overview/material-ui/buttons/ToggleButtons.js","pages/components-overview/material-ui/buttons/OutlinedButtons.js","pages/components-overview/material-ui/buttons/ContainedButtons.js","pages/components-overview/material-ui/buttons/FloatingActionButton.js","pages/components-overview/material-ui/buttons/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","Label","title","component","color","Block","children","overflow","position","width","p","minHeight","style","justifyContent","flexWrap","mx","TextButtons","Grid","container","item","xs","md","Button","disabled","startIcon","endIcon","LoadingButton","loading","loadingIndicator","loadingPosition","size","IconButtons","IconButton","fontSize","m","ButtonGroups","ButtonGroup","orientation","ToggleButtons","useState","alignment","setAlignment","formats","setFormats","view","setView","selected","setSelected","handleAlignment","event","newAlignment","ToggleButtonGroup","value","exclusive","onChange","ToggleButton","newFormats","nextView","OutlinedButtons","ContainedButtons","FloatingActionButton","Fab","BUTTONS","name","RootStyle","styled","Page","theme","paddingTop","paddingBottom","ButtonsComponent","setValue","Box","pt","pb","bgcolor","palette","mode","Container","maxWidth","PATH_PAGE","components","TabContext","TabList","newValue","tab","index","Tab","disableRipple","label","String","TabPanel","mt"],"mappings":"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","file":"static/js/109.c71243d5.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Card, CardHeader, Box, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nLabel.propTypes = {\n  title: PropTypes.string\n};\n\nexport function Label({ title }) {\n  return (\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\n      {title}\n    </Typography>\n  );\n}\n\nBlock.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport function Block({ title, sx, children }) {\n  return (\n    <Card sx={{ overflow: 'unset', position: 'unset', width: '100%' }}>\n      {title && <CardHeader title={title} />}\n      <Box\n        sx={{\n          p: 3,\n          minHeight: 180,\n          ...sx\n        }}\n      >\n        {children}\n      </Box>\n    </Card>\n  );\n}\n","// material\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport { Grid, Button } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function TextButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button color=\"inherit\">Default</Button>\n          <Button color=\"secondary\">Secondary</Button>\n          <Button>Primary</Button>\n          <Button disabled>Disabled</Button>\n          <Button>Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button color=\"inherit\">Default</Button>\n          <Button>Primary</Button>\n          <Button color=\"secondary\">Secondary</Button>\n          <Button color=\"info\">Info</Button>\n          <Button color=\"success\">Success</Button>\n          <Button color=\"warning\">Warning</Button>\n          <Button color=\"error\">Error</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading>Submit</LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />}>\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button color=\"info\">Medium</Button>\n          <Button color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport { Grid, IconButton } from '@material-ui/core';\n// components\nimport { MIconButton } from '../../../../components/@material-extend';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function IconButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <IconButton color=\"inherit\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton>\n            <AlarmIcon />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton color=\"secondary\">\n            <AlarmIcon />\n          </IconButton>\n          <IconButton disabled>\n            <AlarmIcon />\n          </IconButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <MIconButton color=\"inherit\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton>\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"primary\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"secondary\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"success\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"warning\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"error\">\n            <AlarmIcon />\n          </MIconButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <MIconButton size=\"small\" color=\"info\">\n            <AlarmIcon fontSize=\"inherit\" />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon fontSize=\"small\" />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon />\n          </MIconButton>\n          <MIconButton color=\"info\">\n            <AlarmIcon fontSize=\"large\" />\n          </MIconButton>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport { ButtonGroup, Button, Grid } from '@material-ui/core';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function ButtonGroups() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <ButtonGroup color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup>\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled>\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup disabled variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <ButtonGroup size=\"small\" variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup size=\"large\" variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Orientation\" sx={style}>\n          <ButtonGroup orientation=\"vertical\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup orientation=\"vertical\" variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup orientation=\"vertical\" variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <ButtonGroup variant=\"contained\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"contained\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"outlined\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"inherit\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"secondary\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"info\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"success\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"warning\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n\n          <ButtonGroup variant=\"text\" color=\"error\">\n            <Button>One</Button>\n            <Button>Two</Button>\n            <Button>Three</Button>\n          </ButtonGroup>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState } from 'react';\n// material\nimport CheckIcon from '@material-ui/icons/Check';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = useState('left');\n  const [formats, setFormats] = useState(() => ['bold', 'italic']);\n  const [view, setView] = useState('list');\n  const [selected, setSelected] = useState(false);\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Exclusive selection\" sx={style}>\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\n            <ToggleButton value=\"left\">\n              <FormatAlignLeftIcon />\n            </ToggleButton>\n            <ToggleButton value=\"center\">\n              <FormatAlignCenterIcon />\n            </ToggleButton>\n            <ToggleButton value=\"right\">\n              <FormatAlignRightIcon />\n            </ToggleButton>\n            <ToggleButton value=\"justify\" disabled>\n              <FormatAlignJustifyIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Multiple selection\" sx={style}>\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\n            <ToggleButton value=\"bold\">\n              <FormatBoldIcon />\n            </ToggleButton>\n            <ToggleButton value=\"italic\">\n              <FormatItalicIcon />\n            </ToggleButton>\n            <ToggleButton value=\"underlined\">\n              <FormatUnderlinedIcon />\n            </ToggleButton>\n            <ToggleButton value=\"color\" disabled>\n              <FormatColorFillIcon />\n              <ArrowDropDownIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Exclusive selection\" sx={style}>\n          <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\n            <Grid item>\n              <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n\n            <Grid item>\n              <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n\n            <Grid item>\n              <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleAlignment}>\n                <ToggleButton value=\"left\">\n                  <FormatAlignLeftIcon />\n                </ToggleButton>\n                <ToggleButton value=\"center\">\n                  <FormatAlignCenterIcon />\n                </ToggleButton>\n                <ToggleButton value=\"right\">\n                  <FormatAlignRightIcon />\n                </ToggleButton>\n                <ToggleButton value=\"justify\" disabled>\n                  <FormatAlignJustifyIcon />\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n          </Grid>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Vertical & Standalone buttons\" sx={style}>\n          <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange}>\n            <ToggleButton value=\"list\">\n              <ViewListIcon />\n            </ToggleButton>\n            <ToggleButton value=\"module\">\n              <ViewModuleIcon />\n            </ToggleButton>\n            <ToggleButton value=\"quilt\">\n              <ViewQuiltIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n          <ToggleButton\n            value=\"check\"\n            selected={selected}\n            onChange={() => {\n              setSelected(!selected);\n            }}\n          >\n            <CheckIcon />\n          </ToggleButton>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import AlarmIcon from '@material-ui/icons/Alarm';\n// material\nimport { Grid, Button } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function OutlinedButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button variant=\"outlined\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"outlined\">Primary</Button>\n          <Button variant=\"outlined\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"outlined\" disabled>\n            Disabled\n          </Button>\n          <Button variant=\"outlined\">Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button variant=\"outlined\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"outlined\">Primary</Button>\n          <Button variant=\"outlined\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"outlined\" color=\"info\">\n            Info\n          </Button>\n          <Button variant=\"outlined\" color=\"success\">\n            Success\n          </Button>\n          <Button variant=\"outlined\" color=\"warning\">\n            Warning\n          </Button>\n          <Button variant=\"outlined\" color=\"error\">\n            Error\n          </Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button variant=\"outlined\" color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button variant=\"outlined\" color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading variant=\"outlined\">\n            Submit\n          </LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\" variant=\"outlined\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />} variant=\"outlined\">\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button variant=\"outlined\" color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button variant=\"outlined\" color=\"info\">\n            Medium\n          </Button>\n          <Button variant=\"outlined\" color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport { Grid, Button } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' }\n};\n\nexport default function ContainedButtons() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Button variant=\"contained\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"contained\">Primary</Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"contained\" disabled>\n            Disabled\n          </Button>\n          <Button variant=\"contained\">Link</Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <Button variant=\"contained\" color=\"inherit\">\n            Default\n          </Button>\n          <Button variant=\"contained\">Primary</Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Secondary\n          </Button>\n          <Button variant=\"contained\" color=\"info\">\n            Info\n          </Button>\n          <Button variant=\"contained\" color=\"success\">\n            Success\n          </Button>\n          <Button variant=\"contained\" color=\"warning\">\n            Warning\n          </Button>\n          <Button variant=\"contained\" color=\"error\">\n            Error\n          </Button>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"With Icon & Loading\" sx={style}>\n          <Button variant=\"contained\" color=\"error\" startIcon={<AlarmIcon />}>\n            Icon Left\n          </Button>\n          <Button variant=\"contained\" color=\"error\" endIcon={<AlarmIcon />}>\n            Icon Right\n          </Button>\n          <LoadingButton loading variant=\"contained\">\n            Submit\n          </LoadingButton>\n          <LoadingButton loading loadingIndicator=\"Loading...\" variant=\"contained\">\n            Fetch data\n          </LoadingButton>\n          <LoadingButton loading loadingPosition=\"start\" startIcon={<AlarmIcon />} variant=\"contained\">\n            Save\n          </LoadingButton>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <Button variant=\"contained\" color=\"info\" size=\"small\">\n            Small\n          </Button>\n          <Button variant=\"contained\" color=\"info\">\n            Medium\n          </Button>\n          <Button variant=\"contained\" color=\"info\" size=\"large\">\n            Large\n          </Button>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","// material\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport { Grid, Fab } from '@material-ui/core';\n// components\nimport { MFab } from '../../../../components/@material-extend';\n//\nimport { Block } from '../../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { m: '8px !important' }\n};\n\nexport default function FloatingActionButton() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={6}>\n        <Block title=\"Base\" sx={style}>\n          <Fab color=\"default\">\n            <AlarmIcon />\n          </Fab>\n          <Fab>\n            <AlarmIcon />\n          </Fab>\n          <Fab color=\"secondary\">\n            <AlarmIcon />\n          </Fab>\n          <Fab disabled>\n            <AlarmIcon />\n          </Fab>\n          <Fab color=\"default\" variant=\"extended\">\n            <AlarmIcon />\n            Default\n          </Fab>\n          <Fab variant=\"extended\">\n            <AlarmIcon />\n            Primary\n          </Fab>\n          <Fab disabled variant=\"extended\">\n            <AlarmIcon />\n            Disabled\n          </Fab>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Adding Colors\" sx={style}>\n          <MFab color=\"default\">\n            <AlarmIcon />\n          </MFab>\n          <MFab>\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"secondary\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"success\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"warning\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"error\">\n            <AlarmIcon />\n          </MFab>\n\n          <MFab variant=\"extended\" color=\"default\">\n            <AlarmIcon />\n            Default\n          </MFab>\n          <MFab variant=\"extended\">\n            <AlarmIcon />\n            Primary\n          </MFab>\n          <MFab variant=\"extended\" color=\"info\">\n            <AlarmIcon />\n            Info\n          </MFab>\n          <MFab variant=\"extended\" color=\"success\">\n            <AlarmIcon />\n            Success\n          </MFab>\n          <MFab variant=\"extended\" color=\"warning\">\n            <AlarmIcon />\n            Warning\n          </MFab>\n          <MFab variant=\"extended\" color=\"error\">\n            <AlarmIcon />\n            Error\n          </MFab>\n        </Block>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Block title=\"Size\" sx={style}>\n          <MFab color=\"info\" size=\"small\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\" size=\"medium\">\n            <AlarmIcon />\n          </MFab>\n          <MFab color=\"info\">\n            <AlarmIcon />\n          </MFab>\n\n          <MFab variant=\"extended\" size=\"small\" color=\"info\">\n            <AlarmIcon />\n            Small\n          </MFab>\n          <MFab variant=\"extended\" size=\"medium\" color=\"info\">\n            <AlarmIcon />\n            Medium\n          </MFab>\n          <MFab variant=\"extended\" color=\"info\">\n            <AlarmIcon />\n            Large\n          </MFab>\n        </Block>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState } from 'react';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Container, Tab } from '@material-ui/core';\nimport { TabPanel, TabContext, TabList } from '@material-ui/lab';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport TextButtons from './TextButtons';\nimport IconButtons from './IconButtons';\nimport ButtonGroups from './ButtonGroups';\nimport ToggleButtons from './ToggleButtons';\nimport OutlinedButtons from './OutlinedButtons';\nimport ContainedButtons from './ContainedButtons';\nimport FloatingActionButton from './FloatingActionButton';\n\n// ----------------------------------------------------------------------\n\nconst BUTTONS = [\n  { name: 'Contained Buttons', component: <ContainedButtons /> },\n  { name: 'Outlined Buttons', component: <OutlinedButtons /> },\n  { name: 'TextButtons', component: <TextButtons /> },\n  { name: 'Icon Buttons', component: <IconButtons /> },\n  { name: 'Floating Action Button', component: <FloatingActionButton /> },\n  { name: 'Button Groups', component: <ButtonGroups /> },\n  { name: 'Toggle Buttons', component: <ToggleButtons /> }\n];\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ButtonsComponent() {\n  const [value, setValue] = useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <RootStyle title=\"Components: Buttons | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"Buttons\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Buttons' }]}\n            moreLink={[\n              'https://next.material-ui.com/components/buttons',\n              'https://next.material-ui.com/components/button-group',\n              'https://next.material-ui.com/components/floating-action-button',\n              'https://next.material-ui.com/components/toggle-button'\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <TabContext value={value}>\n          <TabList onChange={handleChange}>\n            {BUTTONS.map((tab, index) => (\n              <Tab disableRipple key={tab.name} label={tab.name} value={String(index + 1)} />\n            ))}\n          </TabList>\n\n          {BUTTONS.map((tab, index) => (\n            <TabPanel key={tab.name} value={String(index + 1)} sx={{ mt: 5 }}>\n              {tab.component}\n            </TabPanel>\n          ))}\n        </TabContext>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}