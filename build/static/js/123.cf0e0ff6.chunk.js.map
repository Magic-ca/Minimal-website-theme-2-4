{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/material-ui/table/BasicTable.js","pages/components-overview/material-ui/table/collapsible-table/CollapsibleTableRow.js","pages/components-overview/material-ui/table/collapsible-table/index.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingHead.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingToolbar.js","pages/components-overview/material-ui/table/sorting-selecting/index.js","pages/components-overview/material-ui/table/GroupingFixedHeader.js","pages/components-overview/material-ui/table/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","createData","name","calories","fat","carbs","protein","BASIC_TABLE","BasicTable","Scrollbar","TableContainer","minWidth","mt","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","CollapsibleTable","useState","open","setOpen","IconButton","size","onClick","icon","arrowIosUpwardFill","arrowIosDownwardFill","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","history","historyRow","date","customerId","amount","Math","round","price","COLLAPSIBLE_TABLE","SortingSelectingHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","id","TableSortLabel","active","property","event","label","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","SortingSelectingToolbar","isLight","useTheme","palette","mode","color","bgcolor","Tooltip","title","trash2Fill","roundFilterList","SORTING_SELECTING_TABLE","TABLE_HEAD","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","SortingSelecting","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","max","length","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","position","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","px","py","top","md","FormControlLabel","control","Switch","code","population","density","GROUPING_TABLE","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeader","maxHeight","stickyHeader","background","paper","column","Page","TableComponent","pt","pb","Container","maxWidth","PATH_PAGE","components","Stack","Card","CardHeader"],"mappings":"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","file":"static/js/123.cf0e0ff6.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={5} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst BASIC_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9)\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BasicTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport arrowIosUpwardFill from '@iconify/icons-eva/arrow-ios-upward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport {\n  Box,\n  Table,\n  Collapse,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Typography,\n  IconButton\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nCollapsibleTable.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired\n  }).isRequired\n};\n\nexport default function CollapsibleTable({ row }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            <Icon icon={open ? arrowIosUpwardFill : arrowIosDownwardFill} />\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport CollapsibleTableRow from './CollapsibleTableRow';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      {\n        date: '2020-01-05',\n        customerId: '11091700',\n        amount: 3\n      },\n      {\n        date: '2020-01-02',\n        customerId: 'Anonymous',\n        amount: 1\n      }\n    ]\n  };\n}\n\nconst COLLAPSIBLE_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {COLLAPSIBLE_TABLE.map((row) => (\n              <CollapsibleTableRow key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nSortingSelectingHead.propTypes = {\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  headLabel: PropTypes.array.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired\n};\n\nexport default function SortingSelectingHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts'\n            }}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Toolbar, Tooltip, Typography, IconButton } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\n// ----------------------------------------------------------------------\n\nSortingSelectingToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function SortingSelectingToolbar({ numSelected }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Sorting & Selecting\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import { useState } from 'react';\n// material\nimport {\n  Box,\n  Table,\n  Switch,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  FormControlLabel\n} from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport SortingSelectingHead from './SortingSelectingHead';\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst SORTING_SELECTING_TABLE = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0)\n];\n\nconst TABLE_HEAD = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)'\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories'\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)'\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)'\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function SortingSelecting() {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = SORTING_SELECTING_TABLE.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - SORTING_SELECTING_TABLE.length) : 0;\n\n  return (\n    <>\n      <SortingSelectingToolbar numSelected={selected.length} />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table size={dense ? 'small' : 'medium'}>\n            <SortingSelectingHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              rowCount={SORTING_SELECTING_TABLE.length}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {stableSort(SORTING_SELECTING_TABLE, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isItemSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Box sx={{ position: 'relative' }}>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={SORTING_SELECTING_TABLE.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box\n          sx={{\n            px: 3,\n            py: 1.5,\n            top: 0,\n            position: { md: 'absolute' }\n          }}\n        >\n          <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\n// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, TablePagination } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst GROUPING_TABLE = [\n  createData('India', 'IN', 1324171354, 3287263),\n  createData('China', 'CN', 1403500365, 9596961),\n  createData('Italy', 'IT', 60483973, 301340),\n  createData('United States', 'US', 327167434, 9833520),\n  createData('Canada', 'CA', 37602103, 9984670),\n  createData('Australia', 'AU', 25475400, 7692024),\n  createData('Germany', 'DE', 83019200, 357578),\n  createData('Ireland', 'IE', 4857000, 70273),\n  createData('Mexico', 'MX', 126577691, 1972550),\n  createData('Japan', 'JP', 126317000, 377973),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767)\n];\n\nconst COLUMNS = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2)\n  }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function GroupingFixedHeader() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800, maxHeight: 400 }}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell\n                  align=\"center\"\n                  colSpan={2}\n                  sx={{\n                    background: (theme) => theme.palette.background.paper\n                  }}\n                >\n                  Country\n                </TableCell>\n                <TableCell align=\"center\" colSpan={3} sx={{ background: (theme) => theme.palette.background.paper }}>\n                  Details\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                {COLUMNS.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ top: 56, minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {GROUPING_TABLE.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {COLUMNS.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        page={page}\n        component=\"div\"\n        count={GROUPING_TABLE.length}\n        rowsPerPage={rowsPerPage}\n        onPageChange={handleChangePage}\n        rowsPerPageOptions={[10, 25, 100]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Card, Container, CardHeader, Stack } from '@material-ui/core';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport BasicTable from './BasicTable';\nimport CollapsibleTable from './collapsible-table';\nimport SortingSelecting from './sorting-selecting';\nimport GroupingFixedHeader from './GroupingFixedHeader';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\nexport default function TableComponent() {\n  return (\n    <RootStyle title=\"Components: Table | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"Table\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Table' }]}\n            moreLink=\"https://next.material-ui.com/components/tables\"\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Basic Table\" />\n            <BasicTable />\n          </Card>\n\n          <Card>\n            <SortingSelecting />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Grouping & FixedHeader\" />\n            <GroupingFixedHeader />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Collapsible Table\" />\n            <CollapsibleTable />\n          </Card>\n        </Stack>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}