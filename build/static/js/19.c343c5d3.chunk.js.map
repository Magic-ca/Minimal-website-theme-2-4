{"version":3,"sources":["../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerInput.js","../node_modules/@material-ui/lab/DateRangePicker/date-range-manager.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerToolbar.js","../node_modules/@material-ui/lab/DateRangePickerDay/DateRangePickerDay.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerViewMobile.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerViewDesktop.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerView.js","../node_modules/@material-ui/lab/MobileDateRangePicker/MobileDateRangePicker.js"],"names":["_excluded","DateRangePickerInputRoot","styled","skipSx","theme","display","alignItems","breakpoints","down","flexDirection","DateRangePickerInput","React","props","ref","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","other","_objectWithoutPropertiesLoose","utils","useUtils","startRef","endRef","wrapperVariant","WrapperVariantContext","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","_extends","date","inputString","label","focused","inputProps","onClick","undefined","onFocus","endInputProps","_jsx","children","calculateRangeChange","range","selectedDate","newDate","Boolean","isAfter","nextSelection","newRange","isBefore","_Typography","classes","generateUtilityClasses","DateRangePickerToolbarRoot","PickersToolbar","penIcon","position","top","DateRangePickerToolbarContainer","DateRangePickerToolbar","isMobileKeyboardViewOpen","toggleMobileKeyboardView","toolbarFormat","toolbarTitle","startDateValue","formatByString","formats","shortDate","endDateValue","isLandscape","penIconClassName","_jsxs","PickersToolbarButton","variant","value","selected","Typography","getDateRangePickerDayUtilityClass","slot","generateUtilityClass","dateRangePickerDayClasses","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","DateRangePickerDayRoot","name","overridesResolver","styles","root","styleProps","rangeIntervalDayPreview","borderLeftColor","palette","divider","borderRightColor","isHighlighting","outsideCurrentMonth","borderRadius","color","primary","contrastText","backgroundColor","alpha","light","isStartOfHighlighting","isStartOfMonth","paddingLeft","marginLeft","DAY_MARGIN","isEndOfHighlighting","isEndOfMonth","paddingRight","marginRight","DateRangePickerDayRangeIntervalPreview","border","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","DateRangePickerDayDay","PickersDay","transform","grey","getContrastText","DateRangePickerDay","className","day","isSameDay","endOfMonth","startOfMonth","slots","rangeIntervalPreview","composeClasses","useUtilityClasses","clsx","role","disableMargin","allowSameDateSelection","prevProps","nextProps","areDayPropsEqual","onlyDayView","DateRangePickerViewMobile","changeMonth","components","componentsProps","leftArrowButtonText","maxDateProp","maxDate","minDateProp","minDate","renderDay","_","dayProps","rightArrowButtonText","defaultDates","useDefaultDates","PickersCalendarHeader","onMonthChange","openView","views","PickersCalendar","onFocusedDayChange","doNothing","DayProps","isWithinRange","isStartOfRange","isEndOfRange","DateRangePickerViewDesktopRoot","DateRangePickerViewDesktopContainer","borderRight","DateRangePickerViewDesktopCalendar","minWidth","minHeight","DateRangePickerViewDesktopArrowSwitcher","PickersArrowSwitcher","padding","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","currentMonth","disableFuture","disablePast","dateRangeProps","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","options","previewStart","previewEnd","calculateRangePreview","handleDayChange","CalendarTransitionProps","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","map","index","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","_createElement","key","TransitionProps","__","onMouseEnter","newPreviewRequest","DateRangePickerView","DateInputProps","defaultCalendarMonth","disableAutoMonthSwitching","disableHighlightToday","onDateChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","useCalendarState","disableSwitchToMonthOnDayFocus","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","toShowToolbar","isValid","currentlySelectedDate","displayingMonthRange","currentMonthNumber","requestedMonthNumber","isSameYear","newMonth","addMonths","scrollToDayIfNeeded","handleChange","isFullRangeSelected","isRangeValid","MobileKeyboardInputView","ignoreInvalidInputs","sharedCalendarProps","renderView","PureDateInputComponent","rangePickerValueManager","emptyValue","parseInput","parseRangeInputValue","areValuesEqual","a","b","isEqual","MobileDateRangePicker","inProps","useThemeProps","mask","passedInputFormat","inputFormat","pickerStateProps","restProps","usePickerState","pickerProps","wrapperProps","useDateRangeValidation","keyboardDate","MobileWrapper"],"mappings":"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","file":"static/js/19.c343c5d3.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"];\nimport * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useMaskedInput } from '../internal/pickers/hooks/useMaskedInput';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DateRangePickerInputRoot = styled('div', {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'baseline',\n  [theme.breakpoints.down('xs')]: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\n/**\n * @ignore - internal component.\n */\nconst DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});\nexport default DateRangePickerInput;","export function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd\n}) {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}","var _Typography;\n\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nimport { generateUtilityClasses } from '@material-ui/unstyled';\nimport PickersToolbar from '../internal/pickers/PickersToolbar';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersToolbarButton from '../internal/pickers/PickersToolbarButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivateDateRangePickerToolbar', ['penIcon']);\nconst DateRangePickerToolbarRoot = styled(PickersToolbar, {\n  skipSx: true\n})({\n  [`& .${classes.penIcon}`]: {\n    position: 'relative',\n    top: 4\n  }\n});\nconst DateRangePickerToolbarContainer = styled('div', {\n  skipSx: true\n})({\n  display: 'flex'\n});\n/**\n * @ignore - internal component.\n */\n\nconst DateRangePickerToolbar = ({\n  currentlySelectingRangeEnd,\n  date: [start, end],\n  endText,\n  isMobileKeyboardViewOpen,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  toolbarTitle = 'Select date range'\n}) => {\n  const utils = useUtils();\n  const startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  const endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return /*#__PURE__*/_jsx(DateRangePickerToolbarRoot, {\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon,\n    children: /*#__PURE__*/_jsxs(DateRangePickerToolbarContainer, {\n      children: [/*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: start !== null ? 'h5' : 'h6',\n        value: startDateValue,\n        selected: currentlySelectingRangeEnd === 'start',\n        onClick: () => setCurrentlySelectingRangeEnd('start')\n      }), _Typography || (_Typography = /*#__PURE__*/_jsxs(Typography, {\n        variant: \"h5\",\n        children: [\"\\xA0\", '–', \"\\xA0\"]\n      })), /*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: end !== null ? 'h5' : 'h6',\n        value: endDateValue,\n        selected: currentlySelectingRangeEnd === 'end',\n        onClick: () => setCurrentlySelectingRangeEnd('end')\n      })]\n    })\n  });\n};\n\nexport default DateRangePickerToolbar;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { unstable_composeClasses as composeClasses, generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nimport { DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersDay, { areDayPropsEqual } from '../PickersDay/PickersDay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getDateRangePickerDayUtilityClass(slot) {\n  return generateUtilityClass('MuiDateRangePickerDay', slot);\n}\nexport const dateRangePickerDayClasses = generateUtilityClasses('MuiDateRangePickerDay', ['root', 'rangeIntervalDayHighlight', 'rangeIntervalDayHighlightStart', 'rangeIntervalDayHighlightEnd', 'rangeIntervalPreview', 'rangeIntervalDayPreview', 'rangeIntervalDayPreviewStart', 'rangeIntervalDayPreviewEnd', 'day', 'dayOutsideRangeInterval', 'dayInsideRangeInterval', 'notSelectedDate']);\n\nconst useUtilityClasses = styleProps => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n    borderLeftColor: theme.palette.divider\n  }),\n  [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n    borderRightColor: theme.palette.divider\n  })\n}, styleProps.isHighlighting && !styleProps.outsideCurrentMonth && {\n  borderRadius: 0,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: alpha(theme.palette.primary.light, 0.6),\n  '&:first-of-type': startBorderStyle,\n  '&:last-of-type': endBorderStyle\n}, (styleProps.isStartOfHighlighting || styleProps.isStartOfMonth) && _extends({}, startBorderStyle, {\n  paddingLeft: 0,\n  marginLeft: DAY_MARGIN / 2\n}), (styleProps.isEndOfHighlighting || styleProps.isEndOfMonth) && _extends({}, endBorderStyle, {\n  paddingRight: 0,\n  marginRight: DAY_MARGIN / 2\n})));\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  // replace default day component margin with transparent border to avoid jumping on preview\n  border: '2px solid transparent'\n}, styleProps.isPreviewing && !styleProps.outsideCurrentMonth && _extends({\n  borderRadius: 0,\n  border: `2px dashed ${theme.palette.divider}`,\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent'\n}, (styleProps.isStartOfPreviewing || styleProps.isStartOfMonth) && _extends({\n  borderLeftColor: theme.palette.divider\n}, startBorderStyle), (styleProps.isEndOfPreviewing || styleProps.isEndOfMonth) && _extends({\n  borderRightColor: theme.palette.divider\n}, endBorderStyle))));\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  // Required to overlap preview border\n  transform: 'scale(1.1)',\n  '& > *': {\n    transform: 'scale(0.9)'\n  }\n}, !styleProps.selected && {\n  backgroundColor: 'transparent'\n}, !styleProps.isHighlighting && {\n  '&:hover': {\n    border: `1px solid ${theme.palette.grey[500]}`\n  }\n}, !styleProps.selected && styleProps.isHighlighting && {\n  color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n}));\nconst DateRangePickerDay = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(props, ref) {\n  const {\n    className,\n    day,\n    outsideCurrentMonth,\n    isHighlighting,\n    isPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n\n  const styleProps = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      role: \"cell\",\n      className: classes.rangeIntervalPreview,\n      styleProps: styleProps,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        allowSameDateSelection: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        styleProps: styleProps\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDay.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://material-ui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://material-ui.com/api/date-range-picker-day/)\n */\n\nexport default /*#__PURE__*/React.memo(DateRangePickerDay, (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeMonth\", \"components\", \"componentsProps\", \"date\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport PickersCalendarHeader from '../CalendarPicker/PickersCalendarHeader';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst onlyDayView = ['day'];\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewMobile(props) {\n  const {\n    changeMonth,\n    components,\n    componentsProps,\n    date,\n    leftArrowButtonText,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dayProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dayProps)),\n    rightArrowButtonText\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarHeader, _extends({\n      components: components,\n      componentsProps: componentsProps,\n      leftArrowButtonText: leftArrowButtonText,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: changeMonth,\n      openView: \"day\",\n      rightArrowButtonText: rightArrowButtonText,\n      views: onlyDayView\n    }, other)), /*#__PURE__*/_jsx(PickersCalendar, _extends({}, other, {\n      date: date,\n      onChange: onChange,\n      onFocusedDayChange: doNothing,\n      renderDay: (day, _, DayProps) => renderDay(day, _extends({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps))\n    }))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DateRangePickerViewDesktopRoot = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div', {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `2px solid ${theme.palette.divider}`\n  }\n}));\nconst DateRangePickerViewDesktopCalendar = styled(PickersCalendar, {\n  skipSx: true\n})({\n  minWidth: 312,\n  minHeight: 288\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher, {\n  skipSx: true\n})({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"className\", \"currentlySelectingRangeEnd\", \"date\", \"DateInputProps\", \"defaultCalendarMonth\", \"disableAutoMonthSwitching\", \"disableFuture\", \"disableHighlightToday\", \"disablePast\", \"endText\", \"isMobileKeyboardViewOpen\", \"maxDate\", \"minDate\", \"onDateChange\", \"onMonthChange\", \"open\", \"reduceAnimations\", \"setCurrentlySelectingRangeEnd\", \"shouldDisableDate\", \"showToolbar\", \"startText\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarTitle\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isRangeValid } from '../internal/pickers/date-utils';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport DateRangePickerToolbar from './DateRangePickerToolbar';\nimport { useCalendarState } from '../CalendarPicker/useCalendarState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../internal/pickers/Picker/Picker';\nimport DateRangePickerInput from './DateRangePickerInput';\nimport { defaultReduceAnimations } from '../CalendarPicker/CalendarPicker';\nimport DateRangePickerViewDesktop from './DateRangePickerViewDesktop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * @ignore - internal component.\n */\nexport function DateRangePickerView(props) {\n  const {\n    calendars,\n    className,\n    currentlySelectingRangeEnd,\n    date,\n    DateInputProps,\n    defaultCalendarMonth,\n    disableAutoMonthSwitching = false,\n    disableFuture,\n    disableHighlightToday,\n    disablePast,\n    endText,\n    isMobileKeyboardViewOpen,\n    maxDate,\n    minDate,\n    onDateChange,\n    onMonthChange,\n    open,\n    reduceAnimations = defaultReduceAnimations,\n    setCurrentlySelectingRangeEnd,\n    shouldDisableDate,\n    showToolbar,\n    startText,\n    toggleMobileKeyboardView,\n    toolbarFormat,\n    toolbarTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay\n  } = useCalendarState({\n    date: start || end,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate\n  });\n  const toShowToolbar = showToolbar != null ? showToolbar : wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = day => {\n    if (!day || !utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const currentlySelectedDate = currentlySelectingRangeEnd === 'start' ? start : end;\n\n    if (currentlySelectedDate === null) {\n      // do not scroll if one of ages is not selected\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (!utils.isSameYear(calendarState.currentMonth, day) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = currentlySelectingRangeEnd === 'start' ? currentlySelectedDate : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(currentlySelectedDate, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(newDate => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: date,\n      currentlySelectingRangeEnd\n    });\n    setCurrentlySelectingRangeEnd(nextSelection);\n    const isFullRangeSelected = currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n    onDateChange(newRange, wrapperVariant, isFullRangeSelected ? 'finish' : 'partial');\n  }, [currentlySelectingRangeEnd, date, onDateChange, setCurrentlySelectingRangeEnd, utils, wrapperVariant]);\n\n  const renderView = () => {\n    const sharedCalendarProps = _extends({\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate\n    }, calendarState, other);\n\n    switch (wrapperVariant) {\n      case 'desktop':\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewDesktop, _extends({\n            calendars: calendars\n          }, sharedCalendarProps));\n        }\n\n      default:\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewMobile, _extends({}, sharedCalendarProps));\n        }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [toShowToolbar && /*#__PURE__*/_jsx(DateRangePickerToolbar, {\n      date: date,\n      isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: toggleMobileKeyboardView,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText,\n      toolbarTitle: toolbarTitle,\n      toolbarFormat: toolbarFormat\n    }), isMobileKeyboardViewOpen ? /*#__PURE__*/_jsx(MobileKeyboardInputView, {\n      children: /*#__PURE__*/_jsx(DateRangePickerInput, _extends({\n        disableOpenPicker: true,\n        ignoreInvalidInputs: true\n      }, DateInputProps))\n    }) : renderView()]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerView.propTypes = {\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  disableAutoMonthSwitching: PropTypes.bool\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useThemeProps } from '@material-ui/core/styles';\nimport MobileWrapper from '../internal/pickers/wrappers/MobileWrapper';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from '../DateRangePicker/DateRangePickerView';\nimport DateRangePickerInput from '../DateRangePicker/DateRangePickerInput';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PureDateInputComponent = DateRangePickerInput;\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://material-ui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [MobileDateRangePicker API](https://material-ui.com/api/mobile-date-range-picker/)\n */\nconst MobileDateRangePicker = /*#__PURE__*/React.forwardRef(function MobileDateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMobileDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp,\n    maxDate: maxDateProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(MobileWrapper, _extends({}, restProps, wrapperProps, {\n    DateInputProps: DateInputProps,\n    PureDateInputComponent: PureDateInputComponent,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MobileDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Cancel text message.\n   * @default 'Cancel'\n   */\n  cancelText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable: PropTypes.bool,\n\n  /**\n   * Clear text message.\n   * @default 'Clear'\n   */\n  clearText: PropTypes.node,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    OpenPickerIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * Props applied to the [`Dialog`](/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   * @default defaultMaxDate\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   * @default defaultMinDate\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Ok button text.\n   * @default 'OK'\n   */\n  okText: PropTypes.node,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, the today button is displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Today text message.\n   * @default 'Today'\n   */\n  todayText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date range'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default MobileDateRangePicker;"],"sourceRoot":""}